/**
 * @fileOverview Firestore Security Rules for Digital Connect application.
 *
 * Core Philosophy:
 * This ruleset enforces a strict user-ownership model, ensuring that users can only access their own data.
 *
 * Data Structure:
 * - User profiles are stored under `/users/{userId}`, where `{userId}` is the Firebase Auth UID.
 * - Service requests made by users are stored in a subcollection `/users/{userId}/serviceRequests/{serviceRequestId}`.
 *
 * Key Security Decisions:
 * - Users can only read and write their own profile data.
 * - Users can only create, read, update, and delete service requests associated with their own user ID.
 * - Listing all users is disallowed.
 *
 * Denormalization for Authorization:
 * - Ownership is enforced by path; no denormalization is required. The userId is part of the path for all user-specific data.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Checks if the request is authenticated.
     * @returns {boolean} True if the user is signed in, false otherwise.
     */
    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Checks if the authenticated user ID matches the provided user ID.
     * @param {string} userId - The user ID to compare against the authenticated user ID.
     * @returns {boolean} True if the user is the owner, false otherwise.
     */
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    /**
     * @description Checks if the authenticated user is the existing owner of the document.
     * @param {string} userId - The user ID to compare against the authenticated user ID and the document's userId.
     * @returns {boolean} True if the user is the owner and the document exists, false otherwise.
     */
    function isExistingOwner(userId) {
      return isOwner(userId) && resource != null;
    }

    /**
     * @description Rule set for user profiles.
     * @path /users/{userId}
     * @allow (create) - User with UID 'user123' creates their profile document at /users/user123.
     * @allow (get) - User with UID 'user123' reads their profile document at /users/user123.
     * @allow (update) - User with UID 'user123' updates their profile document at /users/user123.
     * @allow (delete) - User with UID 'user123' deletes their profile document at /users/user123.
     * @deny (create) - User with UID 'user123' attempts to create a profile document at /users/user456.
     * @deny (get) - User with UID 'user123' attempts to read a profile document at /users/user456.
     * @deny (update) - User with UID 'user123' attempts to update a profile document at /users/user456.
     * @deny (delete) - User with UID 'user123' attempts to delete a profile document at /users/user456.
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId} {
      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isOwner(userId) && request.resource.data.id == userId;
      allow update: if isExistingOwner(userId) && request.resource.data.id == resource.data.id;
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Rule set for service requests under a user's profile.
     * @path /users/{userId}/serviceRequests/{serviceRequestId}
     * @allow (create) - User with UID 'user123' creates a service request document at /users/user123/serviceRequests/request1.
     * @allow (get) - User with UID 'user123' reads a service request document at /users/user123/serviceRequests/request1.
     * @allow (update) - User with UID 'user123' updates a service request document at /users/user123/serviceRequests/request1.
     * @allow (delete) - User with UID 'user123' deletes a service request document at /users/user123/serviceRequests/request1.
     * @deny (create) - User with UID 'user123' attempts to create a service request document at /users/user456/serviceRequests/request1.
     * @deny (get) - User with UID 'user123' attempts to read a service request document at /users/user456/serviceRequests/request1.
     * @deny (update) - User with UID 'user123' attempts to update a service request document at /users/user456/serviceRequests/request1.
     * @deny (delete) - User with UID 'user123' attempts to delete a service request document at /users/user456/serviceRequests/request1.
     * @principle Enforces document ownership and relational integrity.
     */
    match /users/{userId}/serviceRequests/{serviceRequestId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId) && request.resource.data.userId == userId;
      allow update: if isExistingOwner(userId) && request.resource.data.userId == resource.data.userId;
      allow delete: if isExistingOwner(userId);
    }
  }
}